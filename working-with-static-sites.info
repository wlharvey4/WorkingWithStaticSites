This is working-with-static-sites.info, produced by makeinfo version 6.5
from working-with-static-sites.texi.

Based upon _Working With Static Sites_ by Raymond Camden & Brian Rinaldo
(O’Reilly).  © 2017 Raymond Camden, 978-1-491-96094-3.

   This document was:

   Produced: 2019-01-05 11:34 Version: 0.0.7 Edition: 0.1
INFO-DIR-SECTION WebDev
START-INFO-DIR-ENTRY
* working-with-static-sites. Outline of Working With Static Sites by R Campden & B Rinaldo.
END-INFO-DIR-ENTRY


File: working-with-static-sites.info,  Node: Top,  Next: Preface,  Up: (dir)

Working With Static Sites
*************************

Based upon _Working With Static Sites_ by Raymond Camden & Brian Rinaldo
(O’Reilly).  © 2017 Raymond Camden, 978-1-491-96094-3.

   This document was:

   Produced: 2019-01-05 11:34 Version: 0.0.7 Edition: 0.1

* Menu:

* Preface::
* Why Static Sites::
* Building a Basic Static Site::
* Building a Blog: Building a Blog 1.
* Building a Documentation Site::
* Adding Dynamic Elements::
* Adding a CMS::
* Deployment::
* Mirgrating to a Static Site::
* Index::

— The Detailed Node Listing —

Preface

* What You Need to Know::
* Conventions::
* Code Examples::

What You Need to Know

* Who this book is for::
* What's not covered::
* How this book is organized::

Why Static Sites

* Benefits of Static Sites::
* Static Sites are _Fast_::
* Static Sites are _Secure_::
* Other Benefits::
* What Kind of Sites Can Go Static::
* What Are Static Sites::

What Are Static Sites

* How to Choose a Static Site Generator::
* Going Forward::

Building a Basic Static Site

* Welcome to Harp::
* Your First Harp Project::
* Working With Layouts and Partials::
* Working With Data::
* Generating a Site::
* Building Camden Grounds::
* Going Further With Harp::

Building a Blog

* Blogging With Jekyll::
* Your First Jekyll Project::
* Writing a Post::
* A Quick Introduction to Liquid::
* Working With Layouts and Includes::
* Adding Additional Files::
* Working With Data: Working With Data 1.
* Configuring Your Jekyll Site::
* Generating a Site: Generating a Site 1.
* Building a Blog::
* Going Further with Jekyll::

Building a Documentation Site

* Characteristics of a Documentation Site::
* Choosing a Generator for Your Documentation Site::
* Our Sample Documentation Site::
* Creating the Site::
* Going Further::

Creating the Site

* Installing Hugo::
* Generating the Initial Site Files::
* Configuring the Hugo Site::
* Adding Content::
* Creating the Layout::

Adding Dynamic Elements

* Handling Forms::
* Adding Comments::
* Adding Search::
* Even More Options::

Handling Forms

* Wufoo Forms::
* Google Docs Forms::
* Formspree::
* Adding a Comment Form to Camden Grounds::

Adding Comments

* Working with Disqus::
* Adding Comments to The Cat Blog::

Adding Search

* Creating a Custom Search Engine::
* Adding a Custom Search Engine to a Real Site::

Adding a CMS

* CloudCannon::
* Netlify CMS::
* Jekyll Admin::
* More Options::

CloudCannon

* Creating a Site on CloudCannon::
* Editing a Site on CloudCannon::
* Where to Go from Here::

Netlify CMS

* Setting Up the Netlify CMS::
* Where to Go from Here: Where to Go from Here 1.

Jekyll Admin

* Setting Up Jekyll Admin::
* Editing a Site in Jekyll Admin::
* Where to Go from Here: Where to Go from Here 2.

More Options

* Forestry.io: Forestryio.
* Lektor::
* Headless CMS::

Deployment

* Plain Old Web Servers::
* Cloud File Storage Providers::
* Deploying with Surge::
* Deploying with Netlify::
* Summary::

Cloud File Storage Providers

* Hosting a Site on Amazon S3::
* Hosting a Site on Google Cloud Storage::

Mirgrating to a Static Site

* Migrating from WordPress to Jekyll::
* Other Migration Options::
* Go Forth and Be Static::

Other Migration Options

* Hugo::
* Middleman::
* Hexo::
* Harp::
* Many More Options Are Available::



File: working-with-static-sites.info,  Node: Preface,  Next: Why Static Sites,  Prev: Top,  Up: Top

Preface
*******

Because of the *benefits* static site generators offer, static sites
generators are used to run thousands of sites and are becoming the basis
for a broad *set of tools* that reach the casual developer and the
nontechnical content writer.

   It can be difficult to know which tools to choose and how to get
started.

   *That is the problem the authors hope to address in writing this
book.*  By providing *common scenarios* and insights on how to address
them, the authors hope to make it easier for anyone to create static
sites solutions and take advantage of the speed, flexibilty, and
security they offer.

* Menu:

* What You Need to Know::
* Conventions::
* Code Examples::


File: working-with-static-sites.info,  Node: What You Need to Know,  Next: Conventions,  Up: Preface

What You Need to Know
=====================

* Menu:

* Who this book is for::
* What's not covered::
* How this book is organized::


File: working-with-static-sites.info,  Node: Who this book is for,  Next: What's not covered,  Up: What You Need to Know

Who this book is for
--------------------

   • This book is for web developers who are looking for a simpler way
     to build and deploy websites.
   • For developers with experience with dynamic app servers (like PHP,
     Node.js, and ColdFusion), this book will present a simpler
     alternative.
   • For developers who are still working with simple websites but need
     a way to make them more powerful.


File: working-with-static-sites.info,  Node: What's not covered,  Next: How this book is organized,  Prev: Who this book is for,  Up: What You Need to Know

What’s not covered
------------------

   • This book focuses on static site generators that work from the
     command line.
   • Desktop tools that have similar features are not covered.


File: working-with-static-sites.info,  Node: How this book is organized,  Prev: What's not covered,  Up: What You Need to Know

How this book is organized
--------------------------

   • Begins by describing why you would want to use static sites.
   • Subsequent chapters focus on a specific type of site and uses this
     as a way of introducing different static site generators.
   • How to build a site
   • More advanced topics, such as adding dynamic elements back in,
   • Working with CMS
   • How to deploy and host a site
   • How to migrate from a dynamic site to a static one


File: working-with-static-sites.info,  Node: Conventions,  Next: Code Examples,  Prev: What You Need to Know,  Up: Preface

Conventions
===========

_Italic_
     Indicates new terms, URLs, email addresses, filenames, and file
     extensions
‘Constant Width’
     Used for program listings, as well as within paragraphs to refer to
     program elements such as variables or function names, databases,
     data types, environment variables, statements, and keywords
‘*Command*’
     Shows commands or other text that should be typed literally by the
     user
‘<Sample>’
     Shows text that should be replaced with user-supplied values or by
     values determined by context.


File: working-with-static-sites.info,  Node: Code Examples,  Prev: Conventions,  Up: Preface

Code Examples
=============

Supplemental material (code examples, exercises, etc.)  is available for
download at <https://github.com/cfjedimaster/Static-Sites-Book>


File: working-with-static-sites.info,  Node: Why Static Sites,  Next: Building a Basic Static Site,  Prev: Preface,  Up: Top

1 Why Static Sites
******************

Why would static sites be a worthwhile option for today’s web?  This
chapter will explore some of the benefits of static sites before diving
into how the changing technology behind static sites (i.e., static site
generators—the topic of this book) are making them viable again.

* Menu:

* Benefits of Static Sites::
* Static Sites are _Fast_::
* Static Sites are _Secure_::
* Other Benefits::
* What Kind of Sites Can Go Static::
* What Are Static Sites::


File: working-with-static-sites.info,  Node: Benefits of Static Sites,  Next: Static Sites are _Fast_,  Up: Why Static Sites

1.1 Benefits of Static Sites
============================

Of the many reasons that static sites are coming back into fashion, two
stand out:

  1. Static sites are _fast_
  2. Statis sites are _secure_


File: working-with-static-sites.info,  Node: Static Sites are _Fast_,  Next: Static Sites are _Secure_,  Prev: Benefits of Static Sites,  Up: Why Static Sites

1.2 Static Sites are _Fast_
===========================

Website performance is critical.  Users tend to abandon sites that take
longer than three seconds to load (with a load time of under two seconds
being considered optimal for mobile).  Achieving this level of website
performance can be difficult.

   By their very nature, static sites load extremely fast.  This is
because every visitor is served the exact same HTML without the
bottlenecks caused by a server-side language, database, or any kind of
dynamic rendering.  Plus, static sites are extremely easy to cache and
serve via a content delivery network (CDN), making them even faster for
the end user.  In addition, once you eliminate dynamic rendering from a
database, you’ve eliminated numerous points of failure that often cause
sites to be unresponsive or completely fail.


File: working-with-static-sites.info,  Node: Static Sites are _Secure_,  Next: Other Benefits,  Prev: Static Sites are _Fast_,  Up: Why Static Sites

1.3 Static Sites are _Secure_
=============================

With a static site, there is no database to breach and no server-side
platform or CMS with unpatched vulnerabilities.  Static sites will not
eliminate every vulnerability, but they narrow the window of
opportunities available to any hacker and limit the amount of potential
damage if a hacker does gain access.


File: working-with-static-sites.info,  Node: Other Benefits,  Next: What Kind of Sites Can Go Static,  Prev: Static Sites are _Secure_,  Up: Why Static Sites

1.4 Other Benefits
==================

There are other benefits of static sites as well, including:

Flexibility
     You are not working within a CMS framework, so there are no
     limitations on how you can buidl your site.
Hosting
     Because there’s no need for a database or server-side language
     support, hosting a static site can be anywhere from inexpensive to
     completely free, depending on your needs.
Versioning
     Since a static site is made up of static files, it is extremely
     easy to track and coordinate changes using version control systems
     like Git and GitHub.

   With all of these benefits, why wouldn’t you choose to use a static
site?  Well, only certain kinds of sites can realisticly work as static
only.


File: working-with-static-sites.info,  Node: What Kind of Sites Can Go Static,  Next: What Are Static Sites,  Prev: Other Benefits,  Up: Why Static Sites

1.5 What Kind of Sites Can Go Static
====================================

There are drawbacks to using static sites.

   • While some amount of dynamic data is possible on a static site that
     uses external API calls or third-party services, a static site is
     simply not suitable if you require large amounts of dynamic data or
     content personalization.
   • From a development and content contribution standpoint, static site
     generators (i.e., the tools frequently used to build static sites)
     can have a steep learning curve.
   • Deployment can be complex, making static sites less than ideal for
     content that changes frequently.

   Sites that tend to work best as static sites are content-focused,
infrequently updated (once or twice a day at most), and do not require a
high degree of user interaction or personalization.

   Here are some examples of types of sites that work well as static
sites:

Blogs
     This is the most common use case; many static site generators
     default to a blog template.  Blogs are content-focused by design
     and, in many cases, user interaction is limited to comments, where
     services like Disqus (https://disqus.com/) con fill the
     requirement.


File: working-with-static-sites.info,  Node: What Are Static Sites,  Prev: What Kind of Sites Can Go Static,  Up: Why Static Sites

1.6 What Are Static Sites
=========================

Static site generators solve the pain of building and maintaining a
static site.  The fundamentals of a static site generator are extremely
simple: they take in dynamic content and layout and output static HTML,
CSS, and JavaScript files.  There are literally hundreds of static site
generators (<https://staticsitegenerators.net/>) but essentially they
all do exactly the same thing and, for the most part, function
similarly.

   • lightweight markup language (‘Markdown .md’)
   • a templating language (‘Handlebars {{}}’)
   • data/metadata (‘Yaml .yml’)
   • CSS preprocessor (‘Sass .scss’)
   • a compile-to-JavaScript language (‘CoffeScript .coffee’)
   • ⇓
   • S S G ⇒ ‘.html .css .js’

What SSG’s Have In Common
=========================

Templating language
     Use one or more, such as Liquid, Handlebars, Jade.  This is a key
     part of any static site generator, as it allows one to build a
     layout/theme for a site and plug in dynamic content during a build.
Markup language
     Use one or more (<http://bit.ly/2lrz8JP>) such as Markdown,
     AsciiDoc, reStructuredText.  Using a lightweight markup language
     makes it quicker and easier to write content using any text editor.
Command line
     Are run via the command line.
Local development server
     This allows you to develop and test locally befdore building and
     deploying your changes.  Typically, the tool watches the folder
     where the site files are being edited and recompiles the site
     on-the-fly as you edit them.
Extensible
     In most cases, if your static site generator doesn’t support a
     feature or language that you need, it has a build-in plugin
     architecture that allows you to add that in (provided you can code
     in the language the tool is built upon).
Support file-based data formats
     e.g.  YAML, TOML, JSON. File-based data allows you to structure any
     type of data independent of its display.

   The author has published a report called ‘Static Site Generators:
Modern Tools for Static Web Development (O’Reilly 2015)’.  The report
focuses on the history of static sites, how they differ from dynamic
sites built using content management systems or blog engines, and gives
some details about the available static site generators.

   The report is free and can be downloaded from O’Reilly here:
<http://oreil.ly/2l4fL8j>.

* Menu:

* How to Choose a Static Site Generator::
* Going Forward::


File: working-with-static-sites.info,  Node: How to Choose a Static Site Generator,  Next: Going Forward,  Up: What Are Static Sites

1.6.1 How to Choose a Static Site Generator
-------------------------------------------

So now with a basic understanding of what a static site generator is,
how can one use them?  The first issue to resolve is trying to figure
out which one to use.  This isn’t an easy decision, since there are in
excess of 445 different available options.  (*note List of SSG’s:
org59e233b.).  Even after filtering out projects that haven’t been
updated recently, there are still hundreds of potential tools.

How To Choose the Right SSG?
----------------------------

The relative “health” of the project
     How recently has it been updated, and how big and active is the
     community?
How good is the documentation
     Many of the hundreds of static site generators (probably a
     majority) are not well documented.  This can cause you to spend far
     more time than necessary building your site and lead to needless
     frustration.  Review the documentation carefully before committing
     to a project and don’t assume that being able to read the source is
     sufficient.
Does it support my requirements
     This can involve very specific requirements (an importer or
     specific plugin) or a more general ability to meet amy needs (is it
     even extenible?).
Is the language it is built upon important to me
     For most, a static site generator will work well out of the box.
     But in some cases it might be necessary to customize your generator
     via plugins or even contributions to the source code.  In these
     cases, knowing the underlying language can be important.


File: working-with-static-sites.info,  Node: Going Forward,  Prev: How to Choose a Static Site Generator,  Up: What Are Static Sites

1.6.2 Going Forward
-------------------

The next chapters will look at some of the more mature and popular
options for developing static sites, such as:
   • Jekyll (Ruby)
   • Hugo (Go)
   • Harp (JavaScript)

   Not only does each have a different underlying language, which may be
an important consideration, but each also has its own pros and cons.
The chapters will look at building some common use cases:
   • a basic informational site
   • a blog
   • documentation site

using these tools in ways that take advantage of their relative merits.

Dynamic Features
================

Once the basics of the static site have been built, there needs to be
added some dynamic features, like comments on a blog post, or a site
search.  Or, if we have to support content contributors that aren’t
comfortable writing posts in Markdown via a text editor, we might want
to add a CMS-like backend to the site to allow for easy editing.  The
following will take a look at multiple solutions that solve each of
these problems.

Deployment
==========

After the site is complete, it’s time to deploy it.  While this can be
as easy as simply FTPing files onto a server, in most cases you’ll want
to automate the process or take advantage of services that can manage
the build process for you.  The following chapters will explore a
variety of tools and services that can ease the deployment process.

Migration
=========

Finally, you may be evaluating static sites as an option to replace an
existing site that uses a tool like WorkPress or some other CMS. For
these cases, the chapters will dive into tools that ease the process of
migrating to a static site generator from a CMS by bringing over
existing content.

SSG Ecosystem
=============

In the end, this book hopes to provide you with a broad overview of the
existing statit site generator ecosystem, while diving into the actual
implementation details of how to accomplish your goals with these tools.


File: working-with-static-sites.info,  Node: Building a Basic Static Site,  Next: Building a Blog 1,  Prev: Why Static Sites,  Up: Top

2 Building a Basic Static Site
******************************

* Menu:

* Welcome to Harp::
* Your First Harp Project::
* Working With Layouts and Partials::
* Working With Data::
* Generating a Site::
* Building Camden Grounds::
* Going Further With Harp::


File: working-with-static-sites.info,  Node: Welcome to Harp,  Next: Your First Harp Project,  Up: Building a Basic Static Site

2.1 Welcome to Harp
===================


File: working-with-static-sites.info,  Node: Your First Harp Project,  Next: Working With Layouts and Partials,  Prev: Welcome to Harp,  Up: Building a Basic Static Site

2.2 Your First Harp Project
===========================


File: working-with-static-sites.info,  Node: Working With Layouts and Partials,  Next: Working With Data,  Prev: Your First Harp Project,  Up: Building a Basic Static Site

2.3 Working With Layouts and Partials
=====================================


File: working-with-static-sites.info,  Node: Working With Data,  Next: Generating a Site,  Prev: Working With Layouts and Partials,  Up: Building a Basic Static Site

2.4 Working With Data
=====================


File: working-with-static-sites.info,  Node: Generating a Site,  Next: Building Camden Grounds,  Prev: Working With Data,  Up: Building a Basic Static Site

2.5 Generating a Site
=====================


File: working-with-static-sites.info,  Node: Building Camden Grounds,  Next: Going Further With Harp,  Prev: Generating a Site,  Up: Building a Basic Static Site

2.6 Building Camden Grounds
===========================


File: working-with-static-sites.info,  Node: Going Further With Harp,  Prev: Building Camden Grounds,  Up: Building a Basic Static Site

2.7 Going Further With Harp
===========================


File: working-with-static-sites.info,  Node: Building a Blog 1,  Next: Building a Documentation Site,  Prev: Building a Basic Static Site,  Up: Top

3 Building a Blog
*****************

* Menu:

* Blogging With Jekyll::
* Your First Jekyll Project::
* Writing a Post::
* A Quick Introduction to Liquid::
* Working With Layouts and Includes::
* Adding Additional Files::
* Working With Data: Working With Data 1.
* Configuring Your Jekyll Site::
* Generating a Site: Generating a Site 1.
* Building a Blog::
* Going Further with Jekyll::


File: working-with-static-sites.info,  Node: Blogging With Jekyll,  Next: Your First Jekyll Project,  Up: Building a Blog 1

3.1 Blogging With Jekyll
========================


File: working-with-static-sites.info,  Node: Your First Jekyll Project,  Next: Writing a Post,  Prev: Blogging With Jekyll,  Up: Building a Blog 1

3.2 Your First Jekyll Project
=============================


File: working-with-static-sites.info,  Node: Writing a Post,  Next: A Quick Introduction to Liquid,  Prev: Your First Jekyll Project,  Up: Building a Blog 1

3.3 Writing a Post
==================


File: working-with-static-sites.info,  Node: A Quick Introduction to Liquid,  Next: Working With Layouts and Includes,  Prev: Writing a Post,  Up: Building a Blog 1

3.4 A Quick Introduction to Liquid
==================================


File: working-with-static-sites.info,  Node: Working With Layouts and Includes,  Next: Adding Additional Files,  Prev: A Quick Introduction to Liquid,  Up: Building a Blog 1

3.5 Working With Layouts and Includes
=====================================


File: working-with-static-sites.info,  Node: Adding Additional Files,  Next: Working With Data 1,  Prev: Working With Layouts and Includes,  Up: Building a Blog 1

3.6 Adding Additional Files
===========================


File: working-with-static-sites.info,  Node: Working With Data 1,  Next: Configuring Your Jekyll Site,  Prev: Adding Additional Files,  Up: Building a Blog 1

3.7 Working With Data
=====================


File: working-with-static-sites.info,  Node: Configuring Your Jekyll Site,  Next: Generating a Site 1,  Prev: Working With Data 1,  Up: Building a Blog 1

3.8 Configuring Your Jekyll Site
================================


File: working-with-static-sites.info,  Node: Generating a Site 1,  Next: Building a Blog,  Prev: Configuring Your Jekyll Site,  Up: Building a Blog 1

3.9 Generating a Site
=====================


File: working-with-static-sites.info,  Node: Building a Blog,  Next: Going Further with Jekyll,  Prev: Generating a Site 1,  Up: Building a Blog 1

3.10 Building a Blog
====================


File: working-with-static-sites.info,  Node: Going Further with Jekyll,  Prev: Building a Blog,  Up: Building a Blog 1

3.11 Going Further with Jekyll
==============================


File: working-with-static-sites.info,  Node: Building a Documentation Site,  Next: Adding Dynamic Elements,  Prev: Building a Blog 1,  Up: Top

4 Building a Documentation Site
*******************************

* Menu:

* Characteristics of a Documentation Site::
* Choosing a Generator for Your Documentation Site::
* Our Sample Documentation Site::
* Creating the Site::
* Going Further::


File: working-with-static-sites.info,  Node: Characteristics of a Documentation Site,  Next: Choosing a Generator for Your Documentation Site,  Up: Building a Documentation Site

4.1 Characteristics of a Documentation Site
===========================================


File: working-with-static-sites.info,  Node: Choosing a Generator for Your Documentation Site,  Next: Our Sample Documentation Site,  Prev: Characteristics of a Documentation Site,  Up: Building a Documentation Site

4.2 Choosing a Generator for Your Documentation Site
====================================================


File: working-with-static-sites.info,  Node: Our Sample Documentation Site,  Next: Creating the Site,  Prev: Choosing a Generator for Your Documentation Site,  Up: Building a Documentation Site

4.3 Our Sample Documentation Site
=================================


File: working-with-static-sites.info,  Node: Creating the Site,  Next: Going Further,  Prev: Our Sample Documentation Site,  Up: Building a Documentation Site

4.4 Creating the Site
=====================

* Menu:

* Installing Hugo::
* Generating the Initial Site Files::
* Configuring the Hugo Site::
* Adding Content::
* Creating the Layout::


File: working-with-static-sites.info,  Node: Installing Hugo,  Next: Generating the Initial Site Files,  Up: Creating the Site

4.4.1 Installing Hugo
---------------------


File: working-with-static-sites.info,  Node: Generating the Initial Site Files,  Next: Configuring the Hugo Site,  Prev: Installing Hugo,  Up: Creating the Site

4.4.2 Generating the Initial Site Files
---------------------------------------


File: working-with-static-sites.info,  Node: Configuring the Hugo Site,  Next: Adding Content,  Prev: Generating the Initial Site Files,  Up: Creating the Site

4.4.3 Configuring the Hugo Site
-------------------------------


File: working-with-static-sites.info,  Node: Adding Content,  Next: Creating the Layout,  Prev: Configuring the Hugo Site,  Up: Creating the Site

4.4.4 Adding Content
--------------------


File: working-with-static-sites.info,  Node: Creating the Layout,  Prev: Adding Content,  Up: Creating the Site

4.4.5 Creating the Layout
-------------------------


File: working-with-static-sites.info,  Node: Going Further,  Prev: Creating the Site,  Up: Building a Documentation Site

4.5 Going Further
=================


File: working-with-static-sites.info,  Node: Adding Dynamic Elements,  Next: Adding a CMS,  Prev: Building a Documentation Site,  Up: Top

5 Adding Dynamic Elements
*************************

* Menu:

* Handling Forms::
* Adding Comments::
* Adding Search::
* Even More Options::


File: working-with-static-sites.info,  Node: Handling Forms,  Next: Adding Comments,  Up: Adding Dynamic Elements

5.1 Handling Forms
==================

* Menu:

* Wufoo Forms::
* Google Docs Forms::
* Formspree::
* Adding a Comment Form to Camden Grounds::


File: working-with-static-sites.info,  Node: Wufoo Forms,  Next: Google Docs Forms,  Up: Handling Forms

5.1.1 Wufoo Forms
-----------------


File: working-with-static-sites.info,  Node: Google Docs Forms,  Next: Formspree,  Prev: Wufoo Forms,  Up: Handling Forms

5.1.2 Google Docs Forms
-----------------------


File: working-with-static-sites.info,  Node: Formspree,  Next: Adding a Comment Form to Camden Grounds,  Prev: Google Docs Forms,  Up: Handling Forms

5.1.3 Formspree
---------------


File: working-with-static-sites.info,  Node: Adding a Comment Form to Camden Grounds,  Prev: Formspree,  Up: Handling Forms

5.1.4 Adding a Comment Form to Camden Grounds
---------------------------------------------


File: working-with-static-sites.info,  Node: Adding Comments,  Next: Adding Search,  Prev: Handling Forms,  Up: Adding Dynamic Elements

5.2 Adding Comments
===================

* Menu:

* Working with Disqus::
* Adding Comments to The Cat Blog::


File: working-with-static-sites.info,  Node: Working with Disqus,  Next: Adding Comments to The Cat Blog,  Up: Adding Comments

5.2.1 Working with Disqus
-------------------------


File: working-with-static-sites.info,  Node: Adding Comments to The Cat Blog,  Prev: Working with Disqus,  Up: Adding Comments

5.2.2 Adding Comments to The Cat Blog
-------------------------------------


File: working-with-static-sites.info,  Node: Adding Search,  Next: Even More Options,  Prev: Adding Comments,  Up: Adding Dynamic Elements

5.3 Adding Search
=================

* Menu:

* Creating a Custom Search Engine::
* Adding a Custom Search Engine to a Real Site::


File: working-with-static-sites.info,  Node: Creating a Custom Search Engine,  Next: Adding a Custom Search Engine to a Real Site,  Up: Adding Search

5.3.1 Creating a Custom Search Engine
-------------------------------------


File: working-with-static-sites.info,  Node: Adding a Custom Search Engine to a Real Site,  Prev: Creating a Custom Search Engine,  Up: Adding Search

5.3.2 Adding a Custom Search Engine to a Real Site
--------------------------------------------------


File: working-with-static-sites.info,  Node: Even More Options,  Prev: Adding Search,  Up: Adding Dynamic Elements

5.4 Even More Options
=====================


File: working-with-static-sites.info,  Node: Adding a CMS,  Next: Deployment,  Prev: Adding Dynamic Elements,  Up: Top

6 Adding a CMS
**************

* Menu:

* CloudCannon::
* Netlify CMS::
* Jekyll Admin::
* More Options::


File: working-with-static-sites.info,  Node: CloudCannon,  Next: Netlify CMS,  Up: Adding a CMS

6.1 CloudCannon
===============

* Menu:

* Creating a Site on CloudCannon::
* Editing a Site on CloudCannon::
* Where to Go from Here::


File: working-with-static-sites.info,  Node: Creating a Site on CloudCannon,  Next: Editing a Site on CloudCannon,  Up: CloudCannon

6.1.1 Creating a Site on CloudCannon
------------------------------------


File: working-with-static-sites.info,  Node: Editing a Site on CloudCannon,  Next: Where to Go from Here,  Prev: Creating a Site on CloudCannon,  Up: CloudCannon

6.1.2 Editing a Site on CloudCannon
-----------------------------------


File: working-with-static-sites.info,  Node: Where to Go from Here,  Prev: Editing a Site on CloudCannon,  Up: CloudCannon

6.1.3 Where to Go from Here
---------------------------


File: working-with-static-sites.info,  Node: Netlify CMS,  Next: Jekyll Admin,  Prev: CloudCannon,  Up: Adding a CMS

6.2 Netlify CMS
===============

* Menu:

* Setting Up the Netlify CMS::
* Where to Go from Here: Where to Go from Here 1.


File: working-with-static-sites.info,  Node: Setting Up the Netlify CMS,  Next: Where to Go from Here 1,  Up: Netlify CMS

6.2.1 Setting Up the Netlify CMS
--------------------------------


File: working-with-static-sites.info,  Node: Where to Go from Here 1,  Prev: Setting Up the Netlify CMS,  Up: Netlify CMS

6.2.2 Where to Go from Here
---------------------------


File: working-with-static-sites.info,  Node: Jekyll Admin,  Next: More Options,  Prev: Netlify CMS,  Up: Adding a CMS

6.3 Jekyll Admin
================

* Menu:

* Setting Up Jekyll Admin::
* Editing a Site in Jekyll Admin::
* Where to Go from Here: Where to Go from Here 2.


File: working-with-static-sites.info,  Node: Setting Up Jekyll Admin,  Next: Editing a Site in Jekyll Admin,  Up: Jekyll Admin

6.3.1 Setting Up Jekyll Admin
-----------------------------


File: working-with-static-sites.info,  Node: Editing a Site in Jekyll Admin,  Next: Where to Go from Here 2,  Prev: Setting Up Jekyll Admin,  Up: Jekyll Admin

6.3.2 Editing a Site in Jekyll Admin
------------------------------------


File: working-with-static-sites.info,  Node: Where to Go from Here 2,  Prev: Editing a Site in Jekyll Admin,  Up: Jekyll Admin

6.3.3 Where to Go from Here
---------------------------


File: working-with-static-sites.info,  Node: More Options,  Prev: Jekyll Admin,  Up: Adding a CMS

6.4 More Options
================

* Menu:

* Forestry.io: Forestryio.
* Lektor::
* Headless CMS::


File: working-with-static-sites.info,  Node: Forestryio,  Next: Lektor,  Up: More Options

6.4.1 Forestry.io
-----------------


File: working-with-static-sites.info,  Node: Lektor,  Next: Headless CMS,  Prev: Forestryio,  Up: More Options

6.4.2 Lektor
------------


File: working-with-static-sites.info,  Node: Headless CMS,  Prev: Lektor,  Up: More Options

6.4.3 Headless CMS
------------------


File: working-with-static-sites.info,  Node: Deployment,  Next: Mirgrating to a Static Site,  Prev: Adding a CMS,  Up: Top

7 Deployment
************

* Menu:

* Plain Old Web Servers::
* Cloud File Storage Providers::
* Deploying with Surge::
* Deploying with Netlify::
* Summary::


File: working-with-static-sites.info,  Node: Plain Old Web Servers,  Next: Cloud File Storage Providers,  Up: Deployment

7.1 Plain Old Web Servers
=========================


File: working-with-static-sites.info,  Node: Cloud File Storage Providers,  Next: Deploying with Surge,  Prev: Plain Old Web Servers,  Up: Deployment

7.2 Cloud File Storage Providers
================================

* Menu:

* Hosting a Site on Amazon S3::
* Hosting a Site on Google Cloud Storage::


File: working-with-static-sites.info,  Node: Hosting a Site on Amazon S3,  Next: Hosting a Site on Google Cloud Storage,  Up: Cloud File Storage Providers

7.2.1 Hosting a Site on Amazon S3
---------------------------------


File: working-with-static-sites.info,  Node: Hosting a Site on Google Cloud Storage,  Prev: Hosting a Site on Amazon S3,  Up: Cloud File Storage Providers

7.2.2 Hosting a Site on Google Cloud Storage
--------------------------------------------


File: working-with-static-sites.info,  Node: Deploying with Surge,  Next: Deploying with Netlify,  Prev: Cloud File Storage Providers,  Up: Deployment

7.3 Deploying with Surge
========================


File: working-with-static-sites.info,  Node: Deploying with Netlify,  Next: Summary,  Prev: Deploying with Surge,  Up: Deployment

7.4 Deploying with Netlify
==========================


File: working-with-static-sites.info,  Node: Summary,  Prev: Deploying with Netlify,  Up: Deployment

7.5 Summary
===========


File: working-with-static-sites.info,  Node: Mirgrating to a Static Site,  Next: Index,  Prev: Deployment,  Up: Top

8 Mirgrating to a Static Site
*****************************

* Menu:

* Migrating from WordPress to Jekyll::
* Other Migration Options::
* Go Forth and Be Static::


File: working-with-static-sites.info,  Node: Migrating from WordPress to Jekyll,  Next: Other Migration Options,  Up: Mirgrating to a Static Site

8.1 Migrating from WordPress to Jekyll
======================================


File: working-with-static-sites.info,  Node: Other Migration Options,  Next: Go Forth and Be Static,  Prev: Migrating from WordPress to Jekyll,  Up: Mirgrating to a Static Site

8.2 Other Migration Options
===========================

* Menu:

* Hugo::
* Middleman::
* Hexo::
* Harp::
* Many More Options Are Available::


File: working-with-static-sites.info,  Node: Hugo,  Next: Middleman,  Up: Other Migration Options

8.2.1 Hugo
----------


File: working-with-static-sites.info,  Node: Middleman,  Next: Hexo,  Prev: Hugo,  Up: Other Migration Options

8.2.2 Middleman
---------------


File: working-with-static-sites.info,  Node: Hexo,  Next: Harp,  Prev: Middleman,  Up: Other Migration Options

8.2.3 Hexo
----------


File: working-with-static-sites.info,  Node: Harp,  Next: Many More Options Are Available,  Prev: Hexo,  Up: Other Migration Options

8.2.4 Harp
----------


File: working-with-static-sites.info,  Node: Many More Options Are Available,  Prev: Harp,  Up: Other Migration Options

8.2.5 Many More Options Are Available
-------------------------------------


File: working-with-static-sites.info,  Node: Go Forth and Be Static,  Prev: Other Migration Options,  Up: Mirgrating to a Static Site

8.3 Go Forth and Be Static
==========================


File: working-with-static-sites.info,  Node: Index,  Prev: Mirgrating to a Static Site,  Up: Top

Index
*****



Tag Table:
Node: Top481
Node: Preface3839
Node: What You Need to Know4641
Node: Who this book is for4879
Node: What's not covered5424
Node: How this book is organized5779
Node: Conventions6386
Node: Code Examples7081
Node: Why Static Sites7344
Node: Benefits of Static Sites7973
Node: Static Sites are _Fast_8305
Node: Static Sites are _Secure_9309
Node: Other Benefits9834
Node: What Kind of Sites Can Go Static10750
Node: What Are Static Sites12140
Ref: org59e233b12621
Node: How to Choose a Static Site Generator14813
Node: Going Forward16555
Node: Building a Basic Static Site18665
Node: Welcome to Harp19062
Node: Your First Harp Project19234
Node: Working With Layouts and Partials19464
Node: Working With Data19716
Node: Generating a Site19930
Node: Building Camden Grounds20134
Node: Going Further With Harp20356
Node: Building a Blog 120552
Node: Blogging With Jekyll21092
Node: Your First Jekyll Project21270
Node: Writing a Post21481
Node: A Quick Introduction to Liquid21680
Node: Working With Layouts and Includes21919
Node: Adding Additional Files22173
Node: Working With Data 122396
Node: Configuring Your Jekyll Site22602
Node: Generating a Site 122826
Node: Building a Blog23024
Node: Going Further with Jekyll23217
Node: Building a Documentation Site23402
Node: Characteristics of a Documentation Site23794
Node: Choosing a Generator for Your Documentation Site24064
Node: Our Sample Documentation Site24390
Node: Creating the Site24656
Node: Installing Hugo25004
Node: Generating the Initial Site Files25179
Node: Configuring the Hugo Site25424
Node: Adding Content25652
Node: Creating the Layout25844
Node: Going Further26012
Node: Adding Dynamic Elements26173
Node: Handling Forms26456
Node: Wufoo Forms26718
Node: Google Docs Forms26862
Node: Formspree27036
Node: Adding a Comment Form to Camden Grounds27222
Node: Adding Comments27442
Node: Working with Disqus27692
Node: Adding Comments to The Cat Blog27875
Node: Adding Search28082
Node: Creating a Custom Search Engine28356
Node: Adding a Custom Search Engine to a Real Site28586
Node: Even More Options28842
Node: Adding a CMS29005
Node: CloudCannon29234
Node: Creating a Site on CloudCannon29471
Node: Editing a Site on CloudCannon29681
Node: Where to Go from Here29919
Node: Netlify CMS30102
Node: Setting Up the Netlify CMS30346
Node: Where to Go from Here 130538
Node: Jekyll Admin30720
Node: Setting Up Jekyll Admin30999
Node: Editing a Site in Jekyll Admin31190
Node: Where to Go from Here 231427
Node: More Options31614
Node: Forestryio31815
Node: Lektor31945
Node: Headless CMS32086
Node: Deployment32220
Node: Plain Old Web Servers32506
Node: Cloud File Storage Providers32683
Node: Hosting a Site on Amazon S332988
Node: Hosting a Site on Google Cloud Storage33215
Node: Deploying with Surge33464
Node: Deploying with Netlify33669
Node: Summary33857
Node: Mirgrating to a Static Site33986
Node: Migrating from WordPress to Jekyll34270
Node: Other Migration Options34498
Node: Hugo34822
Node: Middleman34946
Node: Hexo35093
Node: Harp35230
Node: Many More Options Are Available35389
Node: Go Forth and Be Static35589
Node: Index35781

End Tag Table


Local Variables:
coding: utf-8
End:
